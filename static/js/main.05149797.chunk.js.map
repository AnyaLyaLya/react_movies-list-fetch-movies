{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","default_preview_url.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","API_URL","query","a","fetch","response","json","data","Response","Error","FindMovie","onAddMovie","useState","setQuery","error","setError","setMovie","loading","setLoading","onSubmit","event","preventDefault","trim","getMovie","then","poster","Poster","searchedMovie","Title","Plot","imdbID","finally","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","find","updatedMovies","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05149797.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=f17a064d';\n\ntype PromiseResult = MovieData | ResponseError;\n\nexport async function getMovie(query: string): Promise<PromiseResult> {\n  try {\n    const response = await fetch(`${API_URL}&t=${query}`);\n    const data = await response.json();\n\n    if (data.Response === 'False') {\n      return { Response: 'False', Error: 'unexpected error' };\n    }\n\n    return data as MovieData;\n  } catch (error) {\n    return { Response: 'False', Error: 'unexpected error' };\n  }\n}\n","import React, { ChangeEvent, FC, useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { DEFAULT_PREVIEW } from '../../default_preview_url';\n\ntype Props = {\n  movies: Movie[],\n  onAddMovie: (movies: Movie[]) => void,\n};\n\nexport const FindMovie: FC<Props> = ({ movies, onAddMovie }) => {\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState<string | null>(null);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleSearch = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setError(null);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!query.trim()) {\n      setError('Please enter a movie title');\n\n      return;\n    }\n\n    setLoading(true);\n\n    getMovie(query)\n      .then(response => {\n        if ('Error' in response) {\n          setError(response.Error);\n\n          return;\n        }\n\n        const poster = response.Poster === 'N/A'\n          ? DEFAULT_PREVIEW : response.Poster;\n\n        const searchedMovie = {\n          title: response.Title,\n          description: response.Plot,\n          imgUrl: poster,\n          imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n          imdbId: response.imdbID,\n        };\n\n        setMovie(searchedMovie);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const handleAddMovie = () => {\n    if (movie && !movies.find(({ imdbId }) => imdbId === movie.imdbId)) {\n      const updatedMovies = [...movies, movie];\n\n      onAddMovie(updatedMovies);\n    }\n\n    setMovie(null);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleSearch}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {error}\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light',\n                { 'is-loading': loading })}\n              disabled={!query}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","// eslint-disable-next-line max-len\nexport const DEFAULT_PREVIEW = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} onAddMovie={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}